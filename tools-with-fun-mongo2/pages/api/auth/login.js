import dbConnect from '../../../lib/db'; import Admin from '../../../models/Admin'; import bcrypt from 'bcryptjs'; import jwt from 'jsonwebtoken'; import cookie from 'cookie';
const JWT_SECRET = process.env.JWT_SECRET || 'devsecret'; export default async function handler(req,res){ if(req.method!=='POST') return res.status(405).json({error:'method not allowed'}); await dbConnect(); const { username,password } = req.body; const admin = await Admin.findOne({username}); if(!admin) return res.status(401).json({error:'invalid'}); const ok = bcrypt.compareSync(password, admin.passwordHash); if(!ok) return res.status(401).json({error:'invalid'}); const token = jwt.sign({id:admin._id,username:admin.username}, JWT_SECRET, {expiresIn:'7d'}); res.setHeader('Set-Cookie', cookie.serialize('token', token, {httpOnly:true, path:'/'})); return res.status(200).json({ok:true}); }
